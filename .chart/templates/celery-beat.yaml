apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: celerybeat
  name: celerybeat
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.celerybeat.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      service: celerybeat
  template:
    metadata:
      labels:
        service: celerybeat
    spec:
      securityContext:
        fsGroup: 101 # django group
      containers:
        - args: ["beat"]
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.app.image }}
          name: celerybeat
          resources:
            requests:
              memory: "100Mi"
          volumeMounts:
            - mountPath: /project/static
              name: static
            - mountPath: /project/media
              name: media
      restartPolicy: Always
      volumes:
        - name: static
          persistentVolumeClaim:
            claimName: static
        - name: media
          persistentVolumeClaim:
            claimName: media
      nodeSelector:
        node-type: preemptible
      tolerations:
        - key: node-type
          operator: Equal
          value: preemptible
          effect: NoSchedule
